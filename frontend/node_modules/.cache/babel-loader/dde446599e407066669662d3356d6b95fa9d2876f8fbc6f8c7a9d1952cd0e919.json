{"ast":null,"code":"var _jsxFileName = \"/root/z-prefix/CRUD_app/crud-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [items, setItems] = useState([]);\n\n  // pull the overall item list\n  useEffect(() => {\n    fetch(\"http://localhost:3001\").then(res => res.json()).then(data => setItems(data));\n  }, []);\n  let itemName = document.getElementById(\"item-name\").value;\n  const posting = async () => {\n    console.log(itemName);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter the item name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"item-name\",\n          placeholder: \"enter item name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" Enter item description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"item-description\",\n          placeholder: \"enter item description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter quantity\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"item-quantity\",\n          placeholder: \"enter item quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"form-submit\",\n      onClick: () => posting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }, this), items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item.item_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 22\n    }, this))]\n  }, void 0, true);\n};\n_s(App, \"WQxLG0jSi8z/ovcvg+2h1VT9zGY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","items","setItems","fetch","then","res","json","data","itemName","document","getElementById","value","posting","console","log","children","type","id","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","item","item_name","_c","$RefreshReg$"],"sources":["/root/z-prefix/CRUD_app/crud-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nconst App =()=>{\n\n  const [items,setItems]=useState([])\n\n// pull the overall item list\n  useEffect(()=>{\n    fetch(\"http://localhost:3001\")\n    .then(res=>res.json())\n    .then(data=>setItems(data))\n  },[])\n\nlet itemName = document.getElementById(\"item-name\").value\n\n\n  const posting = async()=>{\n    console.log(itemName)\n\n\n  }\n\n\nreturn (\n\n  <>\n  <form >\n    <label>Enter the item name:\n    <input type='text' id='item-name' placeholder='enter item name' />\n\n    </label>\n    <label> Enter item description:\n    <input type='text' id='item-description' placeholder='enter item description' />\n    </label>\n    <label>Enter quantity\n    <input type='text' id='item-quantity' placeholder='enter item quantity' />\n    </label>\n\n  </form>\n  <button id='form-submit' onClick={()=>posting}></button>\n    {items.map(item=><div>{item.item_name}</div>)}\n  </>\n)\n\n}\n\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,MAAMC,GAAG,GAAEA,CAAA,KAAI;EAAAC,EAAA;EAEb,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;;EAErC;EACED,SAAS,CAAC,MAAI;IACZU,KAAK,CAAC,uBAAuB,CAAC,CAC7BC,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACrBF,IAAI,CAACG,IAAI,IAAEL,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC7B,CAAC,EAAC,EAAE,CAAC;EAEP,IAAIC,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK;EAGvD,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAS;IACvBC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;EAGvB,CAAC;EAGH,oBAEEZ,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACAnB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,GAAO,sBACP,eAAAnB,OAAA;UAAOoB,IAAI,EAAC,MAAM;UAACC,EAAE,EAAC,WAAW;UAACC,WAAW,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE3D,CAAC,eACR1B,OAAA;QAAAmB,QAAA,GAAO,0BACP,eAAAnB,OAAA;UAAOoB,IAAI,EAAC,MAAM;UAACC,EAAE,EAAC,kBAAkB;UAACC,WAAW,EAAC;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE,CAAC,eACR1B,OAAA;QAAAmB,QAAA,GAAO,gBACP,eAAAnB,OAAA;UAAOoB,IAAI,EAAC,MAAM;UAACC,EAAE,EAAC,eAAe;UAACC,WAAW,EAAC;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEJ,CAAC,eACP1B,OAAA;MAAQqB,EAAE,EAAC,aAAa;MAACM,OAAO,EAAEA,CAAA,KAAIX;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,EACrDrB,KAAK,CAACuB,GAAG,CAACC,IAAI,iBAAE7B,OAAA;MAAAmB,QAAA,EAAMU,IAAI,CAACC;IAAS;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,CAAC;EAAA,eAC7C,CAAC;AAGL,CAAC;AAAAtB,EAAA,CA1CKD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA4CT,eAAeA,GAAG;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}